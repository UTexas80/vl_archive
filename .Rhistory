dx_blob[TKR=='A']
dx_blob[TKR=='IBM',]
dt_gf[TKR=='IBM' & OPTKR == "",c(6,9,12,15)]
dt_gf[TKR=='AAPL' & OPTKR == "",c(6,9,12,15)]
dx_blob[TKR=='AAPL',]
dt_gf[TKR=='AAPL' & OPTKR == "",c(6,9,12,15)]
dt_gf[TKR=='F' & OPTKR == "",c(6,9,12,15)]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
library(quantmod)
# Define the stock symbol and expiration date
stock_symbol <- "AAPL"  # Replace with your desired stock symbol
expiration_date <- "2023-06-16"  # Replace with your desired expiration date
# Get the stock price
stock_data <- getSymbols(stock_symbol, from = expiration_date, to = expiration_date)
getSymbols("GOOG", auto.assign = FALSE)
stock_data <- getSymbols("GOOG", auto.assign = FALSE)
current_price <- Cl(stock_data)[1]
current_price
current_price <- Cl(stock_data)[nrow9stock_data]
stock_data
nrow(stock_data )
current_price <- Cl(stock_data)[nrow(stock_data )]
current_price
dx_exp_mth
View(dt_date_exp_mth)
options_data <- getOptionChain("GOOG", expiration = '06-18-2023')
options_data
strike_prices <- options_data$calls$strike
strike_prices
options_data$calls$Strike
nearest_strike <- min(strike_prices, key = function(x) abs(x - current_price))
sort(strike_prices[strike_prices > nearest_strike])[1:2]
# Find the nearest strike price
nearest_strike <- min(strike_prices, key = function(x) abs(x - current_price))
min(abs(strike_prices-current_prices))
min(abs(strike_prices-current_price))
strike_prices-current_price)
strike_prices-current_price
strike_prices
dx_tkr_stk[dx_s_minus_1]
strike_prices
options_data$calls$Strike
options_data$calls$Strike - current_price
class(options_data$calls$Strike)
strike_prices <- as.data.table(options_data$calls$Strike)
strike_prices
strike_prices-current_price
current_price
class(current_price)
curr_price <- as.data.table(current_price)
strike_prices-curr_price
curr_price
strike_prices-curr_price[,2]
strike_prices[,1]-curr_price[,2]
strike_prices[,1]
curr_price[,2]
str(curr_price[,2])
glimpse(curr_price[,2])
glimpse(strike_prices[,1])
cbind(strike_prices[,1], curr_price[,2])
x <- cbind(strike_prices[,1], curr_price[,2])
x[, diff := [[1]-[[2]]]]
x[, diff := [1]-[2]]
x[, diff := [[1]] - [[2]]]
x[, diff := .SD[[1]] - .SD[[2]]]
x[, diff := abs([[1]] - [[2]])]
x[, diff := abs( .SD[[1]] - .SD[[2]])]
min(x[, diff := abs( .SD[[1]] - .SD[[2]])])
min(x[,3]
min(x[,3])
x[, diff := abs( .SD[[1]] - .SD[[2]])]
x
glimpse(strike_prices[,1])
current_price <- Cl(stock_data)[nrow(stock_data )]
stock_data <- getSymbols("GOOG", auto.assign = FALSE)
current_price <- Cl(stock_data)[nrow9stock_data]
current_price <- Cl(stock_data)[nrow(stock_data )]
rm(current_price)
current_price <- Cl(stock_data)[nrow9stock_data]
rm(current_price)
rm(stock_data)
stock_data <- getSymbols("GOOG", auto.assign = FALSE)
current_price <- Cl(stock_data)[nrow(stock_data )]
current_price
options_data <- getOptionChain("GOOG", expiration = '06-18-2023')
options_data
rm(strike_prices)
strike_prices <- as.data.table(options_data$calls$Strike)
strike_prices
x
stock_data <- getSymbols("GOOG", auto.assign = FALSE)
current_price <- Cl(stock_data)[nrow(stock_data )]
options_data <- getOptionChain("GOOG", expiration = '06-18-2023')
strike_prices <- as.data.table(options_data$calls$Strike)
x <- cbind(strike_prices[,1], curr_price[,2])
as.data.table(Cl(stock_data)[nrow(stock_data )])
stock_data <- getSymbols("GOOG", auto.assign = FALSE)
current_price <- as.data.table(Cl(stock_data)[nrow(stock_data )])
options_data <- getOptionChain("GOOG", expiration = '06-18-2023')
strike_prices <- as.data.table(options_data$calls$Strike)
x <- cbind(strike_prices[,1], curr_price[,2])
stock_data <- getSymbols("GOOG", auto.assign = FALSE)
current_price <- as.data.table(Cl(stock_data)[nrow(stock_data )])
options_data <- getOptionChain("GOOG", expiration = '06-18-2023')
strike_prices <- as.data.table(options_data$calls$Strike)
x <- cbind(strike_prices[,1], current_price[,2])
x[, diff := abs( .SD[[1]] - .SD[[2]])]
x
x[sort(strike_prices[strike_prices > nearest_strike])][1:2]
x[setorder(strike_prices[strike_prices > nearest_strike])][1:2]
x[order(strike_prices[strike_prices > nearest_strike])][1:2]
x[order(diff)]
x[order(strike_prices[strike_prices > nearest_strike])][1:2]
x[order(diff)]
x[order(diff)][1,1]
strikes_above <- sort(strike_prices[strike_prices > nearest_strike])[1:2]
strikes_above <- setorder(strike_prices[strike_prices > nearest_strike])[1:2]
nearest_strike <- x[order(diff)][1,1]
nearest_strike
strikes_above <- setorder(strike_prices[strike_prices > nearest_strike])[1:2]
strikes_above <- x[setorder(strike_prices[strike_prices > nearest_strike])][1:2]
strikes_above <- x[setorder(strike_prices[strike_prices >= nearest_strike])][1:2]
strike_prices
names(x)[2] <- strike_prices
names(x)[2] <- "strike_prices"
x
names(x)[2] <- "stock_price"
names(x)[1] <- "strike_prices"
x
x[,  .SD[[1]] > .SD[[2]]]
x[setorder,  .SD[[1]] > .SD[[2]]]
x[order,  .SD[[1]] > .SD[[2]]]
x[order(diff),  .SD[[1]] > .SD[[2]]]
order(x[,  .SD[[1]] > .SD[[2]]],diff)
setorder(x[,  .SD[[1]] > .SD[[2]]],diff)
x[order(diff),  .SD[[1]] > .SD[[2]]]
x[order(diff),  .SD[[1]] > .SD[[2]]][1:2]
x[, strike_prices > stock_price]
x
x[order(diff)]
x[.SD[[1]] > .SD[[2]]]
x[order(diff)]
x[order(diff, .(SD[[1]] > .SD[[2])]
x[order(diff, .SD[[1]] > .SD[[2]]
x[order(diff), .SD[[1]] > .SD[[2]]]
x[order(diff), (.SD[[1]] > .SD[[2]])]
x[order(diff), .SD[[1]] > .SD[[2]]][T]
x[order(diff), .SD[[1]] > .SD[[2]]][TRUE]
x[order(diff), strike_prices > stock_price]
x[order(diff), strike_prices < stock_price]
x{x[order(diff), strike_prices < stock_price]]
x[x[order(diff), strike_prices < stock_price]]
x[x[order(diff), strike_prices < stock_price]][1:2]
x[x[min(diff), strike_prices < stock_price]][1:2]
x[min(diff)]
x[order(diff)]
x[order(diff)][, strike_prices < stock_price]][1:2]
x[order(diff)][, strike_prices < stock_price][1:2]
x[x[order(diff)][, strike_prices < stock_price][1:2]]
x[order(diff)][, strike_prices < stock_price][1:2]
x[order(diff)][, strike_prices < stock_price]][1:2]
x[x[order(diff), .SD[[1]] > .SD[[2]]]]
x[x[order(-diff), .SD[[1]] > .SD[[2]]]]
x[x[order(-diff), .SD[[2]] > .SD[[1]]]]
x[order(-diff),]
x[order(diff),]
x[order(diff),][, .SD[[2]] > .SD[[1]]]]
x[order(diff),][, .SD[[2]] > .SD[[1]]]
x[x[order(diff),][, .SD[[2]] > .SD[[1]]]]
x[x[order(diff),][, .SD[[2]] > nearest_strike]]
nearest_strike
class(nearest_strike)
x[x[order(diff),][, .SD[[2]] > nearest_strike[1,1]]]
nearest_strike[1,1]
glimpse(nearest_strike[1,1])
x[x[order(diff),][, .SD[[2]] > nearest_strike$V1]]
x[order(diff)][1,1]
x[x[order(diff),][, .SD[[2]] > x[order(diff)][1,1]]
x[x[order(diff),][, .SD[[2]] > x[order(diff)][1,1]]]
x[order(diff)][1,1]
x[x[order(diff)][1,1]]
x[[[2]] < order(diff)][1,1]]
x[[2]] < order(diff)][1,1]]
x[, [[2]] < order(diff)][1,1]]
x[, .[[2]] < order(diff)][1,1]]
x[, .[[2]] < order(diff)][1,1]
x[x[order(diff),][, .SD[[2]] > x[order(diff)]
x[x[order(diff),][, .SD[[2]] > x[order(diff)]]
x[x[min(diff), strike_prices < stock_price]][1:2]
cbind(x, nearest_strike)
x <- cbind(x, nearest_strike)
x[x[order(diff), .SD[[1]] > .SD[[4]]]]
x[order(diff)][, .SD[[1]] > .SD[[4]]]]
x[order(diff)][, .SD[[1]] > .SD[[4]]]
x[x[order(diff)][, .SD[[1]] > .SD[[4]]]]
x[, .SD[[1]] > .SD[[4]]]]
x[, .SD[[1]] > .SD[[4]]]
x[x[, .SD[[1]] > .SD[[4]]]]
x[x[, .SD[[1]] > .SD[[4]]]][1:2]
x[x[, .SD[[1]] < .SD[[4]]]][1:2]
x
x[order[[4]]]
x[order[[4]],]
x[setorder[[4]],]
x[setorder([[4]]),]
x[setorder(diff),]
x[order(diff),]
x[order(diff),][, .[[1]] > [[4]]]
x[order(diff),][, .SD[[1]] > .SD[[4]]]
x[x[order(diff),][, .SD[[1]] > .SD[[4]]]]
x[[, .SD[[1]] > .SD[[4]]]]
x[[, .SD[[1]] > .SD[[4]]]
x[[, .SD[[1]] > .SD[[4]]
x[, .SD[[1]] > .SD[[4]]
x[, .SD[[1]] > .SD[[4]]]
x[x[, .SD[[1]] > .SD[[4]]]]
x[x[, .SD[[1]] > .SD[[4]]]][order(diff)]
x[x[, .SD[[1]] > .SD[[4]]]][order(-diff)]
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)]
x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2]
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][1:2]
x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2]
stock_data <- getSymbols("AA", auto.assign = FALSE)
current_price <- as.data.table(Cl(stock_data)[nrow(stock_data )])
options_data <- getOptionChain("GOOG", expiration = '06-18-2023')
strike_prices <- as.data.table(options_data$calls$Strike)
x <- cbind(strike_prices[,1], current_price[,2])
x[, diff := abs( .SD[[1]] - .SD[[2]])]
x[order(diff)]
nearest_strike <- x[order(diff)][1,1]
names(x)[1] <- "strike_prices"
names(x)[2] <- "stock_price"
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][1:2]
x
stock_data <- getSymbols("AA", auto.assign = FALSE)
current_price <- as.data.table(Cl(stock_data)[nrow(stock_data )])
options_data <- getOptionChain("GOOG", expiration = '06-18-2023')
strike_prices <- as.data.table(options_data$calls$Strike)
x <- cbind(strike_prices[,1], current_price[,2])
x[, diff := abs( .SD[[1]] - .SD[[2]])]
x[order(diff)]
nearest_strike <- x[order(diff)][1,1]
x <- cbind(x, nearest_strike)
names(x)[1] <- "strike_prices"
names(x)[2] <- "stock_price"
names(x)[4] <- "nearest_strike"
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][1:2]
x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2]
x
stock_data <- getSymbols("AA", auto.assign = FALSE)
current_price <- as.data.table(Cl(stock_data)[nrow(stock_data )])
options_data <- getOptionChain("AA", expiration = '06-18-2023')
strike_prices <- as.data.table(options_data$calls$Strike)
x <- cbind(strike_prices[,1], current_price[,2])
x[, diff := abs( .SD[[1]] - .SD[[2]])]
x[order(diff)]
nearest_strike <- x[order(diff)][1,1]
x <- cbind(x, nearest_strike)
names(x)[1] <- "strike_prices"
names(x)[2] <- "stock_price"
names(x)[4] <- "nearest_strike"
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][1:2]
x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2]
stock_data <- getSymbols("AA", auto.assign = FALSE)
current_price <- as.data.table(Cl(stock_data)[nrow(stock_data )])
options_data <- getOptionChain("AA", expiration = '06-18-2023')
strike_prices <- as.data.table(options_data$calls$Strike)
x <- cbind(strike_prices[,1], current_price[,2])
x[, diff := abs( .SD[[1]] - .SD[[2]])]
x[order(diff)]
nearest_strike <- x[order(diff)][1,1]
x <- cbind(x, nearest_strike)
names(x)[1] <- "strike_prices"
names(x)[2] <- "stock_price"
names(x)[4] <- "nearest_strike"
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1]
x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2]
stock_data <- getSymbols("AA", auto.assign = FALSE)
current_price <- as.data.table(Cl(stock_data)[nrow(stock_data )])
options_data <- getOptionChain("AA", expiration = '06-18-2023')
strike_prices <- as.data.table(options_data$calls$Strike)
x <- cbind(strike_prices[,1], current_price[,2])
x[, diff := abs( .SD[[1]] - .SD[[2]])]
x[order(diff)]
nearest_strike <- x[order(diff)][1,1]
x <- cbind(x, nearest_strike)
names(x)[1] <- "strike_prices"
names(x)[2] <- "stock_price"
names(x)[4] <- "nearest_strike"
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1]
x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2]
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1]
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][,1]
rbind(x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][,1], x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][1,4])
x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][1,4]
rbind(x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][,1], x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][1,4], x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2][,1], fill = TRUE)
rbind(x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][,1],  x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2][,1], fill = TRUE)
rbind(x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][,1],  x[x[, .SD[[1]] > .SD[[4]]]][order(diff)][1:2][,1], x[x[, .SD[[1]] < .SD[[4]]]][order(diff)][2:1][1,4], fill = TRUE)
x
library(data.table)
# Create sample data
stock_prices <- data.table(
date = c("2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19"),
stock_price = c(100, 110, 120, 130, 140)
)
strike_prices <- data.table(
strike = c(90, 100, 110, 120, 130, 140, 150),
option_price = c(5, 10, 15, 20, 25, 30, 35)
)
# Perform the lead/lag join
stock_prices[, `:=`(
nearest_strike = strike_prices[.(stock_price), roll = "nearest", on = "strike"],
strike_above = shift(strike_prices[.(stock_price), roll = Inf, on = "strike"], type = "lead"),
strike_below = shift(strike_prices[.(stock_price), roll = -Inf, on = "strike"], type = "lag")
)]
stock_prices
dx_tkr_stk
dx_stk
dx_tkr_stk
dx_tkr_stk[TKR=='AA',]
dx_ticker
dx_strike
dx_tkr_stk[TKR=='AA',][dx_ticker]
dx_tkr_stk[TKR=='AA',][dx_ticker, roll = "nearest", on = c("STRIKE", "CMPRICE")]
glimpse(dx_ticker)
glimnpse(dx_tkr_stk)
dx_tkr_stk
glimpse(dx_tkr_stk)
dx_tkr_stk[TKR=='AA',][dx_ticker, roll = "nearest", on = c("STRIKE", "CMPRICE")]
dx_tkr_stk[dx_ticker, roll = "nearest", on = c("STRIKE", "CMPRICE")]
setkey(dx_tkr_stk, sTRIKE)
setkey(dx_tkr_stk, STRIKE)
setkey(dx_tkr_tikcer, CMPRICE )
setkey((dx_ticker, CMPRICE )
setkey(dx_ticker, CMPRICE )
dx_ticker[dx_tkr_stk]
dx_ticker[dx_tkr_stk, on = .(CMPRICE = STRIKE), nomatch = 0]
dx_ticker[dx_tkr_stk, roll = "nearest",,on = .(CMPRICE = STRIKE), nomatch = 0]
dx_ticker[dx_tkr_stk, roll = "nearest",,on = .(CMPRICE = STRIKE)]
dx_ticker[dx_tkr_stk, roll = "inf",,on = .(CMPRICE = STRIKE)]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,"STRIKE"]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,"CMPRICE"]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(TKR, EXPDAY, STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
nrow(dx_ticker)
dx_ticker[dx_tkr_stk, roll = "nearest", ,on = .(TKR, CMPRICE = STRIKE)][order(TKR)]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
shift(dx_tkr_stk[dx_ticker, roll = Inf, ,on = .(TKR, STRIKE = CMPRICE)], type = "lead")
dx_tkr_stk[dx_ticker, roll = Inf, ,on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = Inf, ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[, x:= shift(dx_tkr_stk[dx_ticker, roll = Inf, ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
shift(dx_tkr_stk[dx_ticker, roll = Inf, ,on = .(TKR, STRIKE = CMPRICE)], type = "lead")
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[[[2]] == 'P',]
dx_tkr_stk[[2] == 'P',]
dx_tkr_stk[[2] = 'P',]
dx_tkr_stk['C/P' = 'P',]
dx_tkr_stk[C/P = 'P',]
glimpse(dx_tkr_stk)
dx_tkr_stk[`C/P` == "C"]
dx_tkr_stk[`C/P` == "C"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "C"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "C" & EXPDAY %like% '2022-12-16'][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
na.omit(dx_tkr_stk[`C/P` == "C" & EXPDAY %like% '2022-12-16'][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)])
na.omit(dx_tkr_stk[`C/P` == "P" & EXPDAY %like% '2022-12-16'][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)])
dx_tkr_stk
dx_tkr_stk[order(TKR)]
dx_tkr_stk[order(TKR)][TKR=='AA',]
dx_tkr_stk[order(TKR)][TKR=='AA' EXPDAY %like% '2022-12-16',]
dx_tkr_stk[order(TKR)][TKR=='AA' & EXPDAY %like% '2022-12-16',]
shift(dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)], type = "lead")',]
shift(dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]], type = "lead")',]
dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)])
dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
shift(dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead")
dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[order(TKR)][dx_ticker,  on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[[dx_ticker,  on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker,  on = .(TKR, STRIKE = CMPRICE)]
dx_ticker[dx_tkr_stk,  on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE > CMPRICE)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE < CMPRICE)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = nearest, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead")
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))[TKR='AAPL']
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = "-inf", on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = "inf", on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = "Inf", on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)], type = "lead"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag"))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 3))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 2))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1))
as.data.table(shift(dx_tkr_stk[TKR == 'IBM'][order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)][TKR == 'IBM',], type = "lag", n = 1))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1))
as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 2))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 2)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 1)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 2)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead")))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = -2)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = -1)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 0)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 4)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 3)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 2)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 1)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 0)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 2)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 2)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 3)))
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 4)))
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
library(data.table)
# Create sample data
stock_prices <- data.table(
date = c("2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19",
"2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19"),
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
stock_price = c(100, 110, 120, 130, 140, 200, 210, 220, 230, 240)
)
strike_prices <- data.table(
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT"),
strike = c(90, 100, 110, 120, 130, 140, 190, 200, 210, 220),
option_price = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50)
)
# Perform the lead/lag join
stock_prices[, `:=`(
nearest_strike = strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")],
strike_above = shift(strike_prices[.(symbol, stock_price), roll = Inf, on = c("symbol", "strike")], type = "lead"),
strike_below = shift(strike_prices[.(symbol, stock_price), roll = -Inf, on = c("symbol", "strike")], type = "lag")
)]
strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")],
strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]
stock_prices[strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]]
stock_prices[strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]
stock_prices[strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]]
stock_prices[strike_prices]
stock_prices
strike_pices
strike_prices
setkey(stock_prices, symbol)
setkey(strike_prices,symbol)
stock_prices[strike_prices]
stock_prices[strike_prices, .on = symbol]
stock_prices[strike_prices, on = "symbol"]
strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]
stock_prices[strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]]
stock_prices[strike_prices, on = c("symbol", "strike")]]
stock_prices[strike_prices, on = c("symbol", "strike")]
stock_prices[, `:=`(
nearest_strike = strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]]
stock_prices[, `:=`(
nearest_strike = strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]
)]
View(stock_prices)
View(stock_prices[[4]][[1]])
dx_s_plus_0
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,12)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)]
dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)]
dx_tkr_stk
dx_tkr_stk[[11]] == 'P']
dx_blob[
dt_date_exp_mth[
data.table::between(diff_today, 27,63),][1,1]
]
dx_tkr_stk             <- dx_blob[
dt_date_exp_mth[
data.table::between(diff_today, 27,63),][1,1]
]
dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,12)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,11:13]
dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,11:13)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,11:13)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,9,11:13)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
test_dx <- rbind(dx_s_minus_1[dx_blob, nomatch = 0][C.P == "P" & EXPDAY %like% '2023-06-16',][,13]
dx_s_minus_0[dx_blob, nomatch = 0][C.P == "C" & EXPDAY %like% '2023-06-16',][,13]
test_dx <- rbind(dx_s_minus_1[dx_blob, nomatch = 0][C.P == "P" & EXPDAY %like% '2023-06-16',][,13],
dx_s_minus_0[dx_blob, nomatch = 0][C.P == "C" & EXPDAY %like% '2023-06-16',][,13],
dx_s_plus_0[dx_blob, nomatch = 0][C.P == "P" & EXPDAY %like% '2023-06-16',][,13],
dx_s_plus_1[dx_blob, nomatch = 0][C.P == "C" & EXPDAY %like% '2023-06-16',][,13])
# install.packages("pak")
pak::pak("MichelNivard/gptstudio")
usethis::edit_r_environ()
