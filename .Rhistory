value.var = "PnL",
sep = "_")
dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
current_stock_price <- 47.85
upper_call_strike   <- 52.5
lower_call_strike   <- 47.5
upper_put_strike    <- 50
lower_put_strike    <- 45
implied_volatility  <- 0.296
risk_free_rate      <- 0.0543
days_to_expiration  <- 50
days_to_expiry      <- 50
put_price_long      <- 0.61
call_price_short    <- 1.58
put_price_short     <- 2.92
call_price_long     <- 0.22
dx_condor_profit_loss <- data.table(
Stock_Price = rep(seq(lower_put_strike, upper_call_strike, by = 0.50), days_to_expiration + 1),
Date        = rep(seq(Sys.Date(), Sys.Date() + days_to_expiration, by = "days"), each = 31),
PnL         = NA
)
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Calculate P&L using mapply for each stock price and date combination -----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss)
dx_condor_pnl <<- data.table::dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_pnl
dx_condor_profit_loss
print(dx_condor_profit_loss)
dcast(dx_condor_profit_loss, ... ~ Date, value.var="PnL")
dcast(dx_condor_profit_loss, ... ~ Date, fun.aggregate = sum, value.var="PnL")
styler:::set_style_transformers()
dx_condor_pnl <<- data.table::dcast(dx_condor_profit_loss,
... ~ Date,
fun.aggregate = sum,
value.var     ="PnL")
viewxl:::view_in_xl()
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss)
dx_condor_pnl <<- data.table::dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_pnl <<- data.table::dcast(dx_condor_profit_loss,
... ~ Date,
fun.aggregate = sum,
value.var     ="PnL")
dx_condor_pnl
1.58
2.92+1.58
4.5-0.22
4.28-0.61
remotes::install_github("joshuaulrich/quantmod")
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_strike_cost[dx_condor_pop]
dx_condor_strike_cost[dx_condor_pop][
order(TKR),
]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
renv::status()
renv::snapshot()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_stk
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
glimpse(dx_stk)
traceback()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
View(dx_condor_pop)
View(dx_condor_key)
View(dt_date_run)
View(dx_condor)
View(dx_condor_cost)
View(dx_condor_date)
View(dx_condor_max_loss)
View(dx_condor_max_profit)
View(dx_condor_roi)
View(dx_condor_strike)
View(dx_condor_strike_cost)
View(dx_condor_strike_diff)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dt_date_run
dx_condor
dx_condor_date
View(dx_condor_profit_loss)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
devtools::install_github("karthik/wesanderson")
library(devtools)
devtools::install_github("karthik/wesanderson")
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
glimpse(dx_condor_strike_diff)
dx_condor_strike_diff[
.(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
)
]
dx_condor_strike_diff[
.(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
),
by = TKR
]
dx_condor_strike_diff[
.(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
),
on = TKR
]
dx_condor_strike_diff[
.(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
),
on = "TKR"
]
dx_condor_strike_diff
dx_condor_strike_diff[
][
.(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
),
by = TKR
]
dx_condor_strike_diff[
][
.(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
),
on = TKR
]
dx_condor_strike_diff[
][
.(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
),
on = "TKR"
]
dx_condor_strike_diff
[, .(strike_diff_inner_2 = strike_3 - strike_2,
dx_condor_strike_diff
[, .(strike_diff_inner_2 = strike_3 - strike_2,
dx_condor_strike_diff[, .(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
)
]
cbind(dx_condor_strike_diff, dx_condor_strike_diff[, .(strike_diff_inner_2 = strike_3 - strike_2,
strike_diff_c_2     = strike_4 - strike_2,
strike_diff_p_2     = strike_3 - strike_1
)
])
dx_condor_strike_diff
viewxl:::view_in_xl()
dx_condor_strike_diff <<- dx_condor_strike_diff
viewxl:::view_in_xl()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_strike_diff
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_strike_diff
viewxl:::view_in_xl()
dx_condor_strike_diff <<- dx_condor_strike_diff
viewxl:::view_in_xl()
dx_condor_strike_diff
[, `:=`
dx_condor_strike_diff_2 <-
as.data.table(
dcast(dx_condor_key,
TKR + CMPRICE ~ id_strike,
value.var = "strike",
sep = "_"
)
) %>%
# ------------------------------------------------------------------------------
colnames(dx_condor_strike_diff) <- c("TKR",
"CMPRICE",
"strike_1",
"strike_2",
"strike_3",
"strike_4"
)
dx_condor_strike_diff_2 <-
as.data.table(
dcast(dx_condor_key,
TKR + CMPRICE ~ id_strike,
value.var = "strike",
sep = "_"
)
)  %>%
# ------------------------------------------------------------------------------
colnames(dx_condor_strike_diff) <- c("TKR",
"CMPRICE",
"strike_1",
"strike_2",
"strike_3",
"strike_4"
)
dx_condor_strike_diff_2 <-
as.data.table(
dcast(dx_condor_key,
TKR + CMPRICE ~ id_strike,
value.var = "strike",
sep = "_"
)
) %>%
# ------------------------------------------------------------------------------
colnames(dx_condor_strike_diff) <- c("TKR",
"CMPRICE",
"strike_1",
"strike_2",
"strike_3",
"strike_4"
)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_strike_diff
source("G:/My Drive/Documents/github/opis_volume/opis-volume.r")
source("C:/Users/falkg/OneDrive/Documents/github/vl/vl.r")
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
View(dx_condor_max_profit)
glimpse(dx_condor_max_profit)
View(dx_condor_pnl)
glimpse(dx_condor_pnl)
class(dx_condor_pnl)
View(dx_condor_profit_loss)
glimpse(dx_condor_profit_loss)
glimpse(dx_condor_roi)
View(dx_condor_roi)
glimpse(dx_condor_roi)
View(dx_condor_max_loss)
glimpse(dx_condor_max_loss)
View(dx_condor_pop)
glimpse(dx_condor_pop)
View(dx_condor_pnl)
S0  <- 90.49
vol <- 0.261
r   <- 0.0549
T   <- 37/252
P   <- 7.67
# ------------------------------------------------------------------------------
# Create a data table with the inputs
dt <- data.table(S0 = S0, vol = vol, r = r, T = T)
# Calculate the annualized standard deviation
dt[, sigma := vol * sqrt(T)]
BE_lower <- 90 - P
BE_upper <- 95 + P
dt[, prob :=
stats::pnorm((log(BE_upper/S0) + (r + (sigma ^ 2)/2) * T) / sigma * base::sqrt(T)) -
stats::pnorm((log(BE_lower/S0) + (r + (sigma ^ 2)/2) * T) / sigma * base::sqrt(T))]
# Define the parameters
current_stock_price <- 90.49                                                    # dx_condor_key[,2]
upper_call_strike   <- 100                                                      # dx_condor_key[id_strike == 4, 5]
lower_call_strike   <- 90                                                       # dx_condor_key[id_strike == 2, 5]
lower_put_strike    <- 85                                                       # dx_condor_key[id_strike == 1, 5]
upper_put_strike    <- 95                                                       # dx_condor_key[id_strike == 3, 5]
net_credit          <- 7.35                                                     # dx_condor_roi[, 2]
num_simulations     <- 10000
implied_volatility  <- 0.216                                                    # dx_condor_pop[,4]/100
risk_free_rate      <- 0.0543                                                   # dx_int[,1]
days_to_expiration  <- 37
# Calculate time to expiration in years
time_to_expiration  <- days_to_expiration / 365                                 # dx_condor_pop[1,8]
# Generate random stock price scenarios
set.seed(123) # For reproducibility
z <- rnorm(num_simulations)
simulated_stock_prices <- current_stock_price * exp((risk_free_rate - 0.5 * implied_volatility^2) * time_to_expiration + implied_volatility * sqrt(time_to_expiration) * z)
# Calculate the payoff for each scenario
payoffs <- numeric(num_simulations)
for (i in 1:num_simulations) {
payoff <- ifelse(
simulated_stock_prices[i] < lower_put_strike,
net_credit - (lower_put_strike - simulated_stock_prices[i]),
ifelse(
simulated_stock_prices[i] >= lower_put_strike & simulated_stock_prices[i] <= upper_put_strike,
net_credit,
ifelse(
simulated_stock_prices[i] > upper_put_strike & simulated_stock_prices[i] < lower_call_strike,
0,
ifelse(
simulated_stock_prices[i] >= lower_call_strike & simulated_stock_prices[i] <= upper_call_strike,
net_credit,
net_credit - (simulated_stock_prices[i] - upper_call_strike)
)
payoffs[i] <- payoff
}
# Calculate the probability of profitability
probability_of_profit <- sum(payoffs > 0) / num_simulations
# Print the result
cat("Probability of Profitability:", probability_of_profit, "\n")
View(dx_condor_pop)
glimpse(dx_condor_pop)
View(dx_condor)
View(dx_condor_max_profit)
glimpse(dx_condor_key)
View(dx_condor_max_profit)
View(dx_condor_strike)
View(dx_condor_strike_disp)
View(dx_condor_key)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/lib/000_fun_archive.r", echo=TRUE)
dx_condor_max_profit
dx_condor_cost
data.table::merge.data.table(
dcast(dx_condor_max_profit,
TKR + CMPRICE ~ id_strike,
value.var = "ASK",
sep = "_"),
dx_condor_cost[, max(diff), by = .(TKR)]
)
dx_condor_strike_diff <-
data.table::merge.data.table(
dcast(dx_condor_max_profit,
TKR + CMPRICE ~ id_strike,
value.var = "ASK",
sep = "_"),
dx_condor_cost[, max(diff), by = .(TKR)]
)
dx_condor_strike_cost
glimpse(dx_condor_strike_cost)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_strike_price
dx_condor_max_profit
data.table::merge.data.table(
dcast(dx_condor_max_profit,
TKR + CMPRICE ~ id_strike,
value.var = "ASK",
sep = "_"),
dx_condor_cost[, max(diff), by = .(TKR)]
)[, -c(2,5)]
dx_condor_cost
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_cost
dx_condor_max_profit
data.table::merge.data.table(
dcast(dx_condor_max_profit,
TKR + CMPRICE ~ id_strike,
value.var = "ASK",
sep = "_"),
dx_condor_cost[, max(diff), by = .(TKR)]
)[, -c(2,5)]
data.table::merge.data.table(
dcast(dx_condor_max_profit,
TKR + CMPRICE ~ id_strike,
value.var = "ASK",
sep = "_"),
dx_condor_cost[, max(diff), by = .(TKR)]
)
data.table::merge.data.table(
dcast(dx_condor_max_profit,
TKR + CMPRICE ~ id_strike,
value.var = "ASK",
sep = "_"),
dx_condor_cost[, max(diff), by = .(TKR)]
)[, -7]
dx_condor_strike_price <-
data.table::merge.data.table(
dcast(dx_condor_max_profit,
TKR + CMPRICE ~ id_strike,
value.var = "ASK",
sep = "_"),
dx_condor_cost[, max(diff), by = .(TKR)]
)[, -7]
colnames(dx_condor_strike_price) <- c("TKR",
"CMPRICE",
"strike_1",
"strike_2",
"strike_3",
"strike_4"
)
dx_condor_strike_price
View(dx_condor_strike_price)
glimpse(dx_condor_strike_price)
8.8 + 9.65 -4.75 - 4.95
dx_condor_cost
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_cost
dx_condor_strike_cost
dx_condor_strike_cost[dx_condor_date]
dx_condor_date
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_pnl
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
View(dx_condor_key)
View(dx_condor_strike_cost)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
traceback()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
g[[dx_condor_strike_cost]]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
g[["dx_condor_strike_cost"]]
g[["dx_condor_strike_cost"]]                  %>%
split(., by = c("TKR"))
g[["dx_condor_strike_cost"]]                  %>%
split(., by = c("TKR"))                     %>%
map(., fun_3030_pnl_processing)
fun_3030_pnl_processing
g[["dx_condor_strike_cost"]]                  %>%
split(., by = c("TKR"))
map(., fun_3030_pnl_processing)
map(., fun_3030_pnl_processing())
g[["dx_condor_strike_cost"]]                  %>%
split(., by = c("TKR"))                     %>%
map(., fun_3030_pnl_processing(x))
condor <- g[["dx_condor_strike_cost"]]          %>%
split(., by = c("TKR"))                     %>%
map(., fun_3030_pnl_processing)
g[["dx_condor_strike_cost"]]                  %>%
split(., by = c("TKR"))                     %>%
map(., fun_3030_pnl_processing)
g[["dx_condor_strike_cost"]]
g[["dx_condor_strike_cost"]]                  %>%
split(., by = c("TKR"))                     %>%
map(., fun_3020_spread_processing)
glimpse(g[["dx_condor_strike_cost"]])
class(g[["dx_condor_strike_cost"]])
result <- mapply(
function(dx_condor_strike_cost, tkr) {
data <- split(dx_condor_strike_cost, dx_condor_strike_cost$TKR)
fun_3030_pnl_processing(data[[tkr]])
},
dx_condor_strike_cost = g[["dx_condor_strike_cost"]],
tkr = unique(g[["dx_condor_strike_cost"]]$TKR),
SIMPLIFY = FALSE
)
g[["dx_condor_strike_cost"]]                  %>%
split(., by = c("TKR"))                     %>%
map(., fun_3020_spread_processing)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
View(dx_stk)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
g[["dx_condor_strike_cost"]]
dx_condor_pnl
View(dx_condor_profit_loss)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
rlang::last_trace()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
mapply(fun_3030_pnl_processing, g{["dx_condor_strike_cost"]})
g{["dx_condor_strike_cost"]}
g{["dx_condor_strike_cost"]]
g[["dx_condor_strike_cost"]]
mapply(fun_3030_pnl_processing(), g[["dx_condor_strike_cost"]])
dx_condor_strike_cost
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
g[["dx_condor_strike_cost"]]
g[["dx_condor_strike_cost"]]) |>
g[["dx_condor_strike_cost"]] |>
split(., by = "TKR")
g[["dx_condor_strike_cost"]] %>%
split(., by = "TKR")
g[["dx_condor_strike_cost"]] %>%
split(., by = "TKR") %>% map(fun_3030_pnl_processing)
g[["dx_condor_strike_cost"]] %>%
split(., by = "TKR") %>% map(. fun_3030_pnl_processing)
g[["dx_condor_strike_cost"]] %>%
split(., by = "TKR")
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
str(days_to_expiration)
glimpse(days_to_expiration)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
rlang::last_trace()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_profit_loss
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
glimpse(stock_price)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
current_stock_price
glimpse(current_stock_price)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
date
glimpse(date)
class(date)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
