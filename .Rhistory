function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss )
dcast(dx_condor_profit_loss ,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
viewxl:::view_in_xl()
dcast(dx_condor_profit_loss ,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_pnl <<- dcast(dx_condor_profit_loss ,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
viewxl:::view_in_xl()
current_stock_price <- 88.62
upper_call_strike   <- 95
lower_call_strike   <- 85
upper_put_strike    <- 90
lower_put_strike    <- 80
implied_volatility  <- 0.259
risk_free_rate      <- 0.0543
days_to_expiration  <- 22
days_to_expiry      <- 22
call_price_long     <- 1.47
call_price_short    <- 5.75
put_price_long      <- 0.74
put_price_short     <- 3.95
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ # Function to calculate option value using Black-Scholes formula ---------
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
option_value <- function(S, K, r, T, sigma, option_type) {
#...............................................................................
# browser()
#...............................................................................
d1 <- (log(S / K) + (r + 0.5 * sigma^2) * T) / (sigma * sqrt(T))
d2 <- d1 - sigma * sqrt(T)
if (option_type == "call") {
option_price <- S * pnorm(d1) - K * exp(-r * T) * pnorm(d2)
} else if (option_type == "put") {
option_price <- K * exp(-r * T) * pnorm(-d2) - S * pnorm(-d1)
} else {
stop("Invalid option type")
}
return(option_price)
}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#............Create a data.table to store the results...........................
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dx_condor_profit_loss <- data.table(
Stock_Price = rep(seq(lower_put_strike, upper_call_strike, by = 0.50), days_to_expiration + 1),
Date        = rep(seq(Sys.Date(), Sys.Date() + days_to_expiration, by = "days"), each = 31),
PnL         = NA
)
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Calculate P&L using mapply for each stock price and date combination -----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss )
dx_condor_pnl <<- dcast(dx_condor_profit_loss ,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_pnl
current_stock_price <- 88.62
upper_call_strike   <- 95
lower_call_strike   <- 85
upper_put_strike    <- 90
lower_put_strike    <- 80
implied_volatility  <- 0.259
risk_free_rate      <- 0.0543
days_to_expiration  <- 22
days_to_expiry      <- 22
call_price_long     <- 1.47
call_price_short    <- 5.75
put_price_long      <- 0.74
put_price_short     <- 3.95
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ # Function to calculate option value using Black-Scholes formula ---------
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
option_value <- function(S, K, r, T, sigma, option_type) {
#...............................................................................
# browser()
#...............................................................................
d1 <- (log(S / K) + (r + 0.5 * sigma^2) * T) / (sigma * sqrt(T))
d2 <- d1 - sigma * sqrt(T)
if (option_type == "call") {
option_price <- S * pnorm(d1) - K * exp(-r * T) * pnorm(d2)
} else if (option_type == "put") {
option_price <- K * exp(-r * T) * pnorm(-d2) - S * pnorm(-d1)
} else {
stop("Invalid option type")
}
return(option_price)
}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#............Create a data.table to store the results...........................
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dx_condor_profit_loss <- data.table(
Stock_Price = rep(seq(lower_put_strike, upper_call_strike, by = 0.50), days_to_expiration + 1),
Date        = rep(seq(Sys.Date(), Sys.Date() + days_to_expiration, by = "days"), each = 31),
PnL         = NA
)
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Calculate P&L using mapply for each stock price and date combination -----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss )
dx_condor_pnl <<- dcast(dx_condor_profit_loss ,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_pnl
View(dx_condor_strike)
View(dx_condor_pnl)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
View(dx_condor_key)
View(dx_condor_date)
View(dx_condor_max_loss)
View(dx_condor_strike_cost)
View(dx_condor_roi)
View(dx_condor_pop)
current_stock_price <- 47.85
upper_call_strike   <- 52.5
lower_call_strike   <- 47.5
upper_put_strike    <- 50
lower_put_strike    <- 45
implied_volatility  <- 0.296
risk_free_rate      <- 0.0543
days_to_expiration  <- 50
days_to_expiry      <- 50
put_price_long      <- 0.61
call_price_short    <- 1.58
put_price_short     <- 2.92
call_price_long     <- 0.22
option_value <- function(S, K, r, T, sigma, option_type) {
#...............................................................................
# browser()
#...............................................................................
d1 <- (log(S / K) + (r + 0.5 * sigma^2) * T) / (sigma * sqrt(T))
d2 <- d1 - sigma * sqrt(T)
if (option_type == "call") {
option_price <- S * pnorm(d1) - K * exp(-r * T) * pnorm(d2)
} else if (option_type == "put") {
option_price <- K * exp(-r * T) * pnorm(-d2) - S * pnorm(-d1)
} else {
stop("Invalid option type")
}
return(option_price)
}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#............Create a data.table to store the results...........................
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dx_condor_profit_loss <- data.table(
Stock_Price = rep(seq(lower_put_strike, upper_call_strike, by = 0.50), days_to_expiration + 1),
Date        = rep(seq(Sys.Date(), Sys.Date() + days_to_expiration, by = "days"), each = 31),
PnL         = NA
)
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Calculate P&L using mapply for each stock price and date combination -----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss )
dx_condor_pnl <<- dcast(dx_condor_profit_loss ,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
current_stock_price <- 47.85
upper_call_strike   <- 52.5
lower_call_strike   <- 47.5
upper_put_strike    <- 50
lower_put_strike    <- 45
implied_volatility  <- 0.296
risk_free_rate      <- 0.0543
days_to_expiration  <- 50
days_to_expiry      <- 50
put_price_long      <- 0.61
call_price_short    <- 1.58
put_price_short     <- 2.92
call_price_long     <- 0.22
option_value <- function(S, K, r, T, sigma, option_type) {
#...............................................................................
# browser()
#...............................................................................
d1 <- (log(S / K) + (r + 0.5 * sigma^2) * T) / (sigma * sqrt(T))
d2 <- d1 - sigma * sqrt(T)
if (option_type == "call") {
option_price <- S * pnorm(d1) - K * exp(-r * T) * pnorm(d2)
} else if (option_type == "put") {
option_price <- K * exp(-r * T) * pnorm(-d2) - S * pnorm(-d1)
} else {
stop("Invalid option type")
}
return(option_price)
}
dx_condor_profit_loss <- data.table(
Stock_Price = rep(seq(lower_put_strike, upper_call_strike, by = 0.50), days_to_expiration + 1),
Date        = rep(seq(Sys.Date(), Sys.Date() + days_to_expiration, by = "days"), each = 31),
PnL         = NA
)
dx_condor_profit_loss
dx_condor_profit_loss$Stock_Price
dx_condor_profit_loss$Date
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
print(dx_condor_profit_loss )
dx_condor_pnl <<- dcast(dx_condor_profit_loss ,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_profit_loss
dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
put_short_value
dx_condor_profit_loss
dcast(dx_condor_profit_loss, Stock_Price ~ Date, value.var = 'Pnl', sep = "_")
glimpse(dx_condor_profit_loss)
dcast(dx_condor_profit_loss, Stock_Price ~ Date, value.var = 'PnL', sep = "_")
dcast(dx_condor_profit_loss, Stock_Price, value.var = 'PnL', sep = "_")
dcast(dx_condor_profit_loss, ~ Date, sep = "_")
dcast(dx_condor_profit_loss, Stock_Price, sep = "_")
dx_condor_profit_loss
dcast(dx_condor_profit_loss)
dcast(dx_condor_profit_loss, Stock_Price)
dcast(dx_condor_profit_loss, 'Stock_Price')
dcast(dx_condor_profit_loss, Stock_Price ~ Date)
dcast(dx_condor_profit_loss, Stock_Price ~ Date, value.var = "PnL")
dcast(dx_condor_profit_loss, Stock_Price ~ Date, value.var = "PnL", sep = "_")
print(dx_condor_profit_loss)
data.table::dcast.data.table(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
data.table::dcast.data.table(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "pnl",
sep = "_")
data.table::dcast.data.table(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
data.table::dcast.data.table(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = as.double("PnL"),
sep = "_")
glimpse(dx_condor_profit_loss)
g<-dx_condor_profit_loss
data.table::dcast.data.table(g,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
upper_call_strike   <- 95
lower_call_strike   <- 85
upper_put_strike    <- 90
lower_put_strike    <- 80
implied_volatility  <- 0.259
risk_free_rate      <- 0.0543
days_to_expiration  <- 22
days_to_expiry      <- 22
call_price_long     <- 1.47
call_price_short    <- 5.75
put_price_long      <- 0.74
put_price_short     <- 3.95
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss)
dx_condor_pnl <<- dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss)
dx_condor_pnl <<- dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
current_stock_price <- 47.85
upper_call_strike   <- 52.5
lower_call_strike   <- 47.5
upper_put_strike    <- 50
lower_put_strike    <- 45
implied_volatility  <- 0.296
risk_free_rate      <- 0.0543
days_to_expiration  <- 50
days_to_expiry      <- 50
put_price_long      <- 0.61
call_price_short    <- 1.58
put_price_short     <- 2.92
call_price_long     <- 0.22
dx_condor_profit_loss <- data.table(
Stock_Price = rep(seq(lower_put_strike, upper_call_strike, by = 0.50), days_to_expiration + 1),
Date        = rep(seq(Sys.Date(), Sys.Date() + days_to_expiration, by = "days"), each = 31),
PnL         = NA
)
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Calculate P&L using mapply for each stock price and date combination -----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss)
dx_condor_pnl <<- data.table::dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_pnl
dx_condor_profit_loss
print(dx_condor_profit_loss)
dcast(dx_condor_profit_loss, ... ~ Date, value.var="PnL")
dcast(dx_condor_profit_loss, ... ~ Date, fun.aggregate = sum, value.var="PnL")
styler:::set_style_transformers()
dx_condor_pnl <<- data.table::dcast(dx_condor_profit_loss,
... ~ Date,
fun.aggregate = sum,
value.var     ="PnL")
viewxl:::view_in_xl()
dx_condor_profit_loss$PnL <- mapply(
function(stock_price, date) {
#...............................................................................
# browser()
#...............................................................................
days_to_expiry   <- as.numeric(date - Sys.Date())
call_long_value  <- option_value(stock_price, upper_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call") * -1
call_short_value <- option_value(stock_price, lower_call_strike, risk_free_rate, days_to_expiry / 365, implied_volatility, "call")
put_long_value   <- option_value(stock_price, upper_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put") * -1
put_short_value  <- option_value(stock_price, lower_put_strike,  risk_free_rate, days_to_expiry / 365, implied_volatility, "put")
pnl              <- call_long_value + call_short_value + put_long_value + put_short_value
return(pnl)
},
dx_condor_profit_loss$Stock_Price, dx_condor_profit_loss$Date
)
# Print the data.table
print(dx_condor_profit_loss)
dx_condor_pnl <<- data.table::dcast(dx_condor_profit_loss,
Stock_Price ~ Date,
value.var = "PnL",
sep = "_")
dx_condor_pnl <<- data.table::dcast(dx_condor_profit_loss,
... ~ Date,
fun.aggregate = sum,
value.var     ="PnL")
dx_condor_pnl
1.58
2.92+1.58
4.5-0.22
4.28-0.61
remotes::install_github("joshuaulrich/quantmod")
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor_strike_cost[dx_condor_pop]
dx_condor_strike_cost[dx_condor_pop][
order(TKR),
]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
renv::status()
renv::snapshot()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_stk
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
glimpse(dx_stk)
traceback()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
View(dx_condor_pop)
View(dx_condor_key)
View(dt_date_run)
View(dx_condor)
View(dx_condor_cost)
View(dx_condor_date)
View(dx_condor_max_loss)
View(dx_condor_max_profit)
View(dx_condor_roi)
View(dx_condor_strike)
View(dx_condor_strike_cost)
View(dx_condor_strike_diff)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dt_date_run
dx_condor
dx_condor_date
View(dx_condor_profit_loss)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
