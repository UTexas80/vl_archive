names(strike_prices)[1:2] <- c("symbol", "strike_price")
rices <- data.table(
symbol = c("AAPL", "GOOGL", "MSFT"),  # Example symbols
current_price = c(150, 2500, 300)    # Example current prices
)
# Create a data.table with strike prices
strike_prices <- data.table(
symbol = rep(c("AAPL", "GOOGL", "MSFT"), each = 5),  # Example symbols
strike_price = rep(c(140, 145, 150, 155, 160), 3)   # Example strike prices
)
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - prices$current_price)]
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1,3)]
names(strikeprices)[1:2] <- c("symbol", "strike_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1,3)]
names(strike_prices)[1:2] <- c("symbol", "strike_price")
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - prices$current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = symbol]
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol)]
joined_strikes
# Filter the strike prices above and below with at least $5.00 difference
strike_prices_above <- joined_strikes[strike_price > nearest_strike + 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike - 5]
# Remove unnecessary columns
strike_prices_above[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_below[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_above
# Merge the results into a single data.table
results <- cbind(nearest_strikes, strike_above = strike_prices_above, strike_below = strike_prices_below)
results
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:2] <- c("symbol", "option_type", strike_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", strike_price")
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices[, abs_diff := abs(strike_price - prices$current_price)]
# Find the nearest strike price for each symbol and option type
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
# Join all strike prices for each symbol and option type
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)]
# Filter the strike prices above and below with at least $5.00 difference
strike_prices_above <- joined_strikes[strike_price > nearest_strike + 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike - 5]
# Remove unnecessary columns
strike_prices_above[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_below[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
# Merge the results into a single data.table
results <- cbind(nearest_strikes, strike_above = strike_prices_above, strike_below = strike_prices_below)
# Print the results
print(results)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1,3)]
names(strike_prices)[1:2] <- c("symbol", "strike_price")
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - prices$current_price)]
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
glimpse(strike_prices)
prices
names(strike_prices)[1:2] <- c("symbol", "option_type", strike_price")
names(strike_prices)[1:2] <- c("symbol", "option_type", strike_price"))
names(strike_prices)[1:3] <- c("symbol", "option_type", strike_price")
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - prices$current_price)]
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices[, abs_diff := abs(strike_price - prices$current_price),  by = .(TKR, option_type) ]
strike_prices[, abs_diff := abs(strike_price - prices$current_price),  by = .(symbol, option_type) ]
strike_prices[rep(, abs_diff := abs(strike_price - prices$current_price),  by = .(symbol, option_type) )]
rep(strike_prices[, abs_diff := abs(strike_price - prices$current_price),  by = .(symbol, option_type)])
strike_prices[, abs_diff := abs(strike_price - prices$current_price),  by = .(symbol, option_type)]
strike_prices[, abs_diff := abs(strike_price - prices$current_price),  by = .(symbol)]
strike_prices[, abs_diff := abs(strike_price - prices$current_price)]
nrow(strike_prices)
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes
order(nearest_strikes, symbol)
order(nearest_strikes,  symbol)
nearest_strikes
class(nearest_strike)
class(nearest_strikes)
order(nearest_strikes, symbol)
View(nearest_strikes)
dx_tkr_stk[TKR == 'AA',]
dx_tkr_stk[TKR == 'AA & EXPDAY %like% '2023-01-20'',]
dx_tkr_stk[TKR == 'AA' & EXPDAY %like% '2023-01-20'',]
dx_tkr_stk[TKR == 'AA' & EXPDAY %like% '2023-01-20',]
dx_ticker
prices[symbol = 'AA',]
prices
strike_prices[symbol == 'AA',]
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices[, abs_diff := abs(strike_price - prices$current_price), by = .(symbol, option_type)]
strike_prices
strike_prices[symbol == 'AA',]
setkey(strike_prices, symbol)
setkey(prices, symbol)
prices[strike_prices]
prices[strike_prices][, abs_diff := abs(strike_price - prices$current_price)]
prices[strike_prices]
x<-prices[strike_prices]
x[, abs_diff := abs(strike_price - prices$current_price)]
x[,-5]
x[, abs_diff := abs(strike_price - current_price)]
prices[strike_prices]
strike_prices[prices]
strike_prices <- strike_prices[prices]
strike_prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol)]
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)]
joined_strikes
# Filter the strike prices above and below with at least $5.00 difference
strike_prices_above <- joined_strikes[strike_price > nearest_strike + 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike - 5]
strike_prices_below
# Remove unnecessary columns
strike_prices_above[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_below[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_below
strike_prices_above[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_above <- joined_strikes[strike_price > nearest_strike + 5]
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol)]
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices]
strike_prices
prices
strike_prices[prices, on = .(symbol)]
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices, on = .(symbol)]
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)]
joined_strikes
# Filter the strike prices above and below with at least $5.00 difference
strike_prices_above <- joined_strikes[strike_price > nearest_strike + 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike - 5]
strike_prices_above
strike_prices_below
strike_prices_above <- joined_strikes[strike_price > nearest_strike & strike_price <= nearest_strike + 2 * 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike & strike_price >= nearest_strike - 2 * 5]
strike_prices_above
View(strike_prices_above)
strike_prices_above[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_below[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_above
View(strike_prices_above)
# Remove unnecessary columns
strike_prices_above[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_below[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
# Merge the results into a single data.table
results <- cbind(nearest_strikes, strike_above = strike_prices_above, strike_below = strike_prices_below)
results
strike_prices_above
strike_prices_below
dx_strike_prices <- setorder(rbind(strike_prices_above, strike_prices_below), symbol, option_type, strike_price)
dx_strike_prices
dx_strike_prices[symbol == 'AAPL',]
nearest_strikes
nearest_strikes[dx_strike_prices, on =.(symbol, option_type)]
dx_strike_prices[nearest_strikes, on =.(symbol, option_type)]
dx_strike_prices <- setorder(rbind(strike_prices_above, strike_prices_below), symbol, option_type, strike_price)
dx_strike_prices
dx_strike_prices[nearest_strikes, on =.(symbol, option_type)]
nearest_strikes
dx_strike_prices <- setorder(rbind(strike_prices_below, nearest_strike, strike_prices_above), symbol, option_type, strike_price)
dx_strike_prices <- setorder(rbind(strike_prices_below, nearest_strikes, strike_prices_above), symbol, option_type, strike_price)
strike_prices_above
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
rices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
rices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices, on = .(symbol)]
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes <-  nearest_strikes[prices, on = .(symbol)]
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)]
# Filter the strike prices above and below with at least $5.00 difference
strike_prices_above <- joined_strikes[strike_price > nearest_strike & strike_price <= nearest_strike + 2 * 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike & strike_price >= nearest_strike - 2 * 5]
# Remove unnecessary columns
strike_prices_above[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_below[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_above
strike_prices_below
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices, on = .(symbol)]
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes <-  nearest_strikes[prices, on = .(symbol)]
nearest_strikes
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)]
joined_strikes
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)][,-6]
joined_strikes
joined_strikes[strike_price > nearest_strike & strike_price <= nearest_strike + 2 * 5]
strike_prices_above <- joined_strikes[strike_price > nearest_strike & strike_price <= nearest_strike + 2 * 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike & strike_price >= nearest_strike - 2 * 5]
strike_prices_below
strike_prices_above
x<-strike_prices_above
x[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
x
strike_prices_above[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_below[, `:=`(nearest_strike = NULL, abs_diff = NULL)]
strike_prices_above
strike_prices_below
nearest_strikes
nearest_strikes <-  nearest_strikes[prices, on = .(symbol)][,c(1:2,4:3)]
nearest_strikes
names(nearest_strikes)[4] <- "strike_price"
setorder(rbind(strike_prices_below, nearest_strikes, strike_prices_above), symbol, option_type, strike_price)
dx_strike_prices <- setorder(rbind(strike_prices_below, nearest_strikes, strike_prices_above), symbol, option_type, strike_price)
dx_strike_prices
x <- strike_prices_below
x
x[, "strike_idx", by = .(symbol, option_type)]
x <- strike_prices_below
rleid(, by = .(symbol, option_type))
x
x[, strike_idx := rleid(x$strike_price), by = .(symbol, option_type)]
rep(x[, strike_idx := rleid(x$strike_price), by = .(symbol, option_type)])
x[, rep(strike_idx := rleid(x$strike_price), by = .(symbol, option_type))]
x[rep(, strike_idx := rleid(x$strike_price), by = .(symbol, option_type))]
x
rleid(x$strike_price)
rleid(x$strike_price, by = .(symbol, option_type))
dx_strike_prices <- setorder(rbind(strike_prices_below, nearest_strikes, strike_prices_above), symbol, option_type, strike_price)
dx_strike_prices
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices, on = .(symbol)]
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes <-  nearest_strikes[prices, on = .(symbol)][,c(1:2,4:3)]
names(nearest_strikes)[4] <- "strike_price"
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)][,-6]
# Filter the strike prices above and below with at least $5.00 difference
strike_prices_above <- joined_strikes[strike_price > nearest_strike & strike_price <= nearest_strike + 2 * 5]
joined_strikes
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices, on = .(symbol)]
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes <-  nearest_strikes[prices, on = .(symbol)][,c(1:2,4:3)]
names(nearest_strikes)[4] <- "strike_price"
nearest_strikes[strike_prices, on = .(symbol, option_type)][,-6]
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices, on = .(symbol)]
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes <-  nearest_strikes[prices, on = .(symbol)][,c(1:2,4:3)]
names(nearest_strikes)[4] <- "strike_price"
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)][,-6]
names(joined_strikes)[4] <- "nearest_strike"
strike_prices_above <- joined_strikes[strike_price > nearest_strike & strike_price <= nearest_strike + 2 * 5]
strike_prices_above
joined_strikes
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices, on = .(symbol)]
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes <-  nearest_strikes[prices, on = .(symbol)][,c(1:2,4:3)]
names(nearest_strikes)[4] <- "strike_price"
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)][,-6]
names(joined_strikes)[5] <- "nearest_strike"
# Filter the strike prices above and below with at least $5.00 difference
strike_prices_above <- joined_strikes[strike_price > nearest_strike & strike_price <= nearest_strike + 2 * 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike & strike_price >= nearest_strike - 2 * 5]
strike_prices_above
strike_prices_above[, `:=`(abs_diff = NULL)]
strike_prices_below[, `:=`(abs_diff = NULL)]
strike_prices_above
strike_prices_below
# Merge the results into a single data.table
results <- cbind(nearest_strikes, strike_above = strike_prices_above, strike_below = strike_prices_below)
# Add the "position" column to indicate the relative position of the strike prices
results[, position := ifelse(strike_price == nearest_strike, 0,
ifelse(strike_price > nearest_strike, rank(-strike_price, ties.method = "first") - 1,
-rank(strike_price, ties.method = "first") + 1))]
results
strike_prices_below
strike_prices_below[symbol == 'AAPL',]
strike_prices_above[symbol == 'AAPL',]
strike_prices_below
y <- strike_prices_below
y$group <-rleid(y$nearest_strike, by = .(symbol, option_type))
y$group <-rleid(y$nearest_strike, by = .(symbol, option_type, current_price))
y <- strike_prices_below
y
y[, strike_idx := ifelse(strike_price == nearest_strike, 0,
ifelse(strike_price > nearest_strike, rleid(-strike_price) - 1,
-rleid(strike_price) + 1))]
y
y[, strike_idx := ifelse(strike_price == nearest_strike, 0,
ifelse(strike_price > nearest_strike, rleid(-strike_price) - 1,
-rleid(strike_price) + 1)), by = .(symbol, option_type)]
y
y[, strike_idx := ifelse(strike_price == nearest_strike, 0,
ifelse(strike_price > nearest_strike, rleid(-strike_price) - 1,
-rleid(strike_price) + 1)), by = .(symbol, option_type, strike_price)]
y
y[, strike_idx := ifelse(strike_price == nearest_strike, 0,
ifelse(strike_price < nearest_strike, rleid(strike_price) + 1,
-rleid(-strike_price) - 1)), by = .(symbol, option_type, strike_price)]
y
y[, strike_idx := ifelse(strike_price < nearest_strike, rleid(strike_price) + 1, 0), by = .(symbol, option_type, strike_price)]
y
y[, strike_idx := ifelse(strike_price < nearest_strike, rleid(strike_price) - 1, 0), by = .(symbol, option_type, strike_price)]
y
y[, strike_idx := ifelse(strike_price < nearest_strike, rleid(strike_price), 0), by = .(symbol, option_type, strike_price)]
y
y[, strike_idx := ifelse(strike_price < nearest_strike, rleid(strike_price), 0), by = .(symbol, option_type)]
y
?getDTthreads
getDTthreads()
setDTthreads(threads = 6)
getDTthreads()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
prices <- dx_ticker
names(prices)[1:2] <- c("symbol", "current_price")
strike_prices <- dx_tkr_stk[EXPDAY %like% '2023-01-20', c(1:3)]
names(strike_prices)[1:3] <- c("symbol", "option_type", "strike_price")
strike_prices <- strike_prices[prices, on = .(symbol)]
# Compute the absolute difference between strike and current prices
strike_prices[, abs_diff := abs(strike_price - current_price)]
# Find the nearest strike price for each symbol
nearest_strikes <- strike_prices[, .(nearest_strike = strike_price[which.min(abs_diff)]), by = .(symbol, option_type)]
nearest_strikes <-  nearest_strikes[prices, on = .(symbol)][,c(1:2,4:3)]
names(nearest_strikes)[4] <- "strike_price"
# Join all strike prices for each symbol
joined_strikes <- nearest_strikes[strike_prices, on = .(symbol, option_type)][,-6]
names(joined_strikes)[5] <- "nearest_strike"
# Filter the strike prices above and below with at least $5.00 difference
strike_prices_above <- joined_strikes[strike_price > nearest_strike & strike_price <= nearest_strike + 2 * 5]
strike_prices_below <- joined_strikes[strike_price < nearest_strike & strike_price >= nearest_strike - 2 * 5]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_stk
glimpse(dt_gf)
view(dt_gf)
dt_gf
view(dt_gf)
View(dt_gf)
dt_gf[is.null(OPTKR),]
dt_gf[is.na(OPTKR),]
dt_gf[OPTKR=="",]
unitque(dt_gf[OPTKR=="",][,c(1,3)])
unique(dt_gf[OPTKR=="",][,c(1,3)])
glimpse(dx_stk)
dx_stk
unique(dx_stk[OPTKR=="",][,c(1,3)])
dt_gf
fun_0000_archive_main()
dt_gf
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dt_gf
dt_gf[TKR=='AA']
dt_gf[TKR=='A']
dt_gf[TKR=='AAPL']
dt_gf[TKR=='AAPL' & OPTKR == "",]
dt_gf[TKR=='IBM' & OPTKR == "",]
dt_gf[TKR=='TSLA' & OPTKR == "",]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dt_gf
x00_3100_00 <<- dt_gf
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
x00_3100_00 <<- dt_gf
x00_3100_01 <<- dt_gf
viewxl:::view_in_xl()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dt_condor_key
?rleid
z<-dt_condor_key
data.table::rleid(z, "TKR")
z
glimpse(z)
data.table::rleid(z, "TKR")
data.table::rleid(z, "StRIKE")
data.table::rleid(z, "value")
z[, by = rleid(TKR)]
z[, by = rle(TKR)]
rle(z, "value")
rle(z)
class(z)
DT = data.table(grp = rep(c("A", "B", "C", "A", "B"), c(2, 2, 3, 1, 2)), value = 1:10)
glimpse(DT)
glimpse(z)
rleid(DT$grp)
rleid(z$TKR)
z[, id_strike := rleid(TKR)]
glimpse(z)
z <- z[,-4]
z
z[, id_strike := rleid(TKR), by = c(TKR, value)]
z[, id_strike := rleid(TKR), by = c("TKR", "value")]
z <- z[,-4]
z[, id_strike := rleid(TKR), by = c("value", "TKR")]
z[, id_strike := rleid(TKR), by = c("TKR")]
dx_stk <- dx_stk[dt_date_exp_mth[data.table::between(diff_today, 27,63),][1,1], on = .(EXPDAY)]
# ------------------------------------------------------------------------------
dx_stk  %>%
split(., by = c("TKR", "EXPDAY", 'C/P')) %>%
map(., fun_3100_strike_processing)
dt_gf[LEN(OPTKR)>0 & LEN(lag_1_optkr)>0 & LEN(lag_0_optkr)>0 & LEN(lead_0_optkr)>0 & LEN(lead_1_optkr)>0,]
dx_stk <- dx_stk[dt_date_exp_mth[data.table::between(diff_today, 27,63),][1,1], on = .(EXPDAY)]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
z <<-  data.table::setorder(
data.table::melt(dt_gf,
id = 1:3,
measure = c(21, 9, 27, 15)),
"TKR")[
,c(1, 3, 5)]
z
z[, by=.(TKR, rleid(TKR, prefix="tkr"))]
z[, .N, by=.(TKR, rleid(TKR, prefix="tkr"))]
z[, .N, by=.(TKR, rleid(TKR, value, prefix="tkr"))]
z[, .N, by=.(TKR, rleid(TKR, STRKIE, value, prefix="tkr"))]
z <<-  data.table::setorder(
data.table::melt(dt_gf,
id = 1:3,
measure = c(21, 9, 27, 15)),
"TKR")[
,c(1, 3, 5)]
z
z[, .N, by=.(TKR, rleid(value))]
z <<-  data.table::setorder(
data.table::melt(dt_gf,
id = 1:3,
measure = c(21, 9, 27, 15)),
"TKR")[
,c(1, 3, 5)]
z[, z:= rleid(value), by=.(TKR, rleid(value))]
z[, z:= rleid(value), by=.(TKR, rleid(TKR))]
glimpse(dt_gf)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dt_condor_key
glimpse(dt_condor_key)
dt1 <- data.table(key = c(1, 2, 3, 4, 5), value1 = letters[1:5])
dt1
dt1 <- data.table(key = c("1", "2", "3", "4", "5"), value1 = letters[1:5])
glimpse(ALLNEW)
glimpse(dx_blob)
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
traceback()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dt_condor_cost
dt_condor_cost <<- data.table::setorder(dt_condor_cost, TKR, id_strike)
dt_condor_cost
styler:::set_style_transformers()
dt_condor_cost <<- dt_condor_cost, TKR, id_strike)
dt_condor_cost
dt_condor_cost[, cost := sum(BID), by = TKR]
y<- dt_condor_cost[, cost := sum(BID), by = TKR]
y
unique(y[,c(1,6)])
