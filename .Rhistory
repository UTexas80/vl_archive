dx_s_plus_0[dx_blob, nomatch = 0][C.P == "P" & EXPDAY %like% '2023-06-16',][,13],
dx_s_plus_1[dx_blob, nomatch = 0][C.P == "C" & EXPDAY %like% '2023-06-16',][,13])
# install.packages("pak")
pak::pak("MichelNivard/gptstudio")
usethis::edit_r_environ()
renv::status()
renv::snapshot()
usethis::edit_r_environ()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
traceback()
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
glimpse(dx_tkr_stk)
dx_s_minus_1
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[, .SD[which.min(abs(STRIKE - CMPRICE))]]
dx_blob[, .SD[which.min(abs(STRIKE - CMPRICE))]]
gptstudio:::addin_chatgpt()
View(dx_tkr_stk)
sorted_dt <- dx_tkr_stk[order(abs(CMPRICE - STRIKE))]
# Identify the index of the strike price closest to the current stock price
closest_index <- which.min(abs(sorted_dt$CMPRICE - sorted_dt$STRIKE))
# Extract the strike prices of interest
nearest_strikes <- sorted_dt$STRIKE[c(closest_index - 1, closest_index, closest_index + 1)]
# Retrieve the relevant data from the original data.table
relevant_data <- dx_tkr_stk[STRIKE %in% nearest_strikes]
relevant_data
sorted_dt <- dx_tkr_stk[order(abs(CMPRICE - STRIKE))]
sorted_dt
dx_tkr_stk
sorted_dt <- dx_tkr_stk[order(abs(CMPRICE - STRIKE))][,c(1,11,9,12:13)]
sorted_dt
glimpse(dx_tkr_stk)
sorted_dt <- dx_blob[order(abs(CMPRICE - STRIKE))][,c(1,11,9,12:13)]
sorted_dt
dx_blob
dx_strike
dx_tkr_stk
sorted_dt <- dx_tkr_stk[order(abs(CMPRICE - STRIKE))][,c(10:11,9,12:13)]
sorted_dt
closest_index <- which.min(abs(sorted_dt$CMPRICE - sorted_dt$STRIKE))
closest_index
glimpse(dx_tkr_stk)
sorted_dt <- dx_tkr_stk[order(abs(CMPRICE - STRIKE))][,c(10:11,8,12:13)]
closest_index <- which.min(abs(sorted_dt$CMPRICE - sorted_dt$STRIKE))
closest_index
sorted_dt
sorted_dt <- dx_tkr_stk[order(symbol, abs(CMPRICE - STRIKE))][,c(10:11,8,12:13)]
sorted_dt <- dx_tkr_stk[order(TKR, abs(CMPRICE - STRIKE))][,c(10:11,8,12:13)]
sorted_dt
closest_index <- which.min(abs(sorted_dt$CMPRICE - sorted_dt$STRIKE))
closest_index
dx_tkr_stk[order(TKR, 'C/P')][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(10:11,8,12:13)]
dx_s_minus_1           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE >= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_0           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_plus_0            <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_plus_1            <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE <= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_0
dx_s_minus_1
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,12)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,12)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(1,12)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(8,12)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(9,12)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(10,12)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(10, 8, 12)]
dx_tkr_stk
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE >= CMPRICE)][order(TKR)][,c(10, 8, 12)]
dx_tkr_stk[`C/P` == "P"]
dx_tkr_stk[`C/P` == "P"][,c(10, 8, 12)]
dx_ticker
dx_tkr_stk[`C/P` == "P", roll = "nearest"][,c(10, 8, 12)]
dx_tkr_stk[`C/P` == "P", roll = "nearest", on = .(TKR)][,c(10, 8, 12)]
na.omit(dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE >= CMPRICE)][order(TKR)])
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker,on = .(TKR, STRIKE > CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker,on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
dx_ticker[dx_tkr_stk[`C/P` == "P"],on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
dx_ticker[dx_tkr_stk][`C/P` == "P"],on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
dx_ticker[dx_tkr_stk,`C/P` == "P"],on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "C" & EXPDAY %like% '2022-12-16'][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "C"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "C"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "C"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE => CMPRICE)][order(TKR)]
dx_ticker[dx_tkr_stk[`C/P` == "C", roll = "nearest", ,on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
[dx_ticker][dx_tkr_stk,`C/P` == "C", roll = "nearest", ,on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
dx_ticker[dx_tkr_stk,`C/P` == "C", roll = "nearest", ,on = .(TKR, STRIKE >= CMPRICE)][order(TKR)]
dx_ticker[dx_tkr_stk,`C/P` == "C", roll = "nearest", ,on = .(TKR) ][order(TKR)]
dx_tkr_stk[`C/P` == "C" & EXPDAY %like% '2022-12-16'][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[which.min(abs(STRIKE - CMPRICE))]
dx_tkr_stk[.(dx_ticker), roll = "nearest", on = "STRIKE"]
dx_tkr_stk[TKR=='AA',][dx_ticker, roll = "nearest", on = c("STRIKE", "CMPRICE")]
dx_blob[
dt_date_exp_mth[
data.table::between(diff_today, 27,63),][1,1]
dx_blob[
dx_tkr_stk             <- dx_blob[
dt_date_exp_mth[
data.table::between(diff_today, 27,63),][1,1]
]
glimpse(dx_tkr_stk)
dx_tkr_stk[TKR=='AA',][dx_ticker, roll = "nearest", on = c("STRIKE", "CMPRICE")]
dx_ticker
dx_tkr_stk[dx_ticker, roll = "nearest", on = c("STRIKE", "CMPRICE")]
dx_tkr_stk[dx_ticker, roll = "nearest", on = c(CMPRICE")]
dx_tkr_stk[TKR=='AA',][dx_ticker, roll = "nearest", on = c("CMPRICE")]
dx_tkr_stk[`C/P` == "P"]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE >= CMPRICE)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE => CMPRICE)]
dx_tkr_stk[`C/P` == "P"][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE >= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_1           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE >= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_0           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_plus_0            <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_plus_1            <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE <= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
rbind(dx_s_minus_1,
dx_s_minus_0,
dx_s_plus_0,
dx_s_plus_1)
dx_s_minus_1
dx_s_minus_0
dx_s_plus_0
dx_s_plus_1
rbind(dx_s_minus_1, dx_s_minus_0)
glimpse(dx_s_minus_1, dx_s_minus_0)
glimpse(dx_s_minus_1)
glimpse(dx_s_minus_0)
stock_prices <- data.table(
date = c("2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19",
"2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19"),
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
stock_price = c(100, 110, 120, 130, 140, 200, 210, 220, 230, 240)
)
stock_prices
strike_prices <- data.table(
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT"),
strike = c(90, 100, 110, 120, 130, 140, 190, 200, 210, 220),
option_price = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50)
)
strike_prices
stock_prices[, `:=`(
nearest_strike = strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")],
strike_above = shift(strike_prices[.(symbol, stock_price), roll = Inf, on = c("symbol", "strike")], type = "lead"),
strike_below = shift(strike_prices[.(symbol, stock_price), roll = -Inf, on = c("symbol", "strike")], type = "lag")
)]
stock_prices[, `:=`(
nearest_strike = strike_prices[.rep(symbol, stock_price), roll = "nearest", on = c("symbol", "strike"),length = .N)]]
stock_prices[, `:=`(
nearest_strike = strike_prices[.rep(symbol, stock_price,length = .N)), roll = "nearest", on = c("symbol", "strike")]]
stock_prices <- data.table(
date = c("2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19"),
stock_price = c(100, 110, 120, 130, 140)
)
strike_prices <- data.table(
strike = c(90, 100, 110, 120, 130, 140, 150),
option_price = c(5, 10, 15, 20, 25, 30, 35)
)
# Perform the lead/lag join
stock_prices[, `:=`(
nearest_strike = strike_prices[.(stock_price), roll = "nearest", on = "strike"],
strike_above = shift(strike_prices[.(stock_price), roll = Inf, on = "strike"], type = "lead"),
strike_below = shift(strike_prices[.(stock_price), roll = -Inf, on = "strike"], type = "lag")
)]
library(data.table)
# Create sample data
stock_prices <- data.table(
date = c("2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19",
"2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19"),
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
stock_price = c(100, 110, 120, 130, 140, 200, 210, 220, 230, 240)
)
strike_prices <- data.table(
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT"),
strike = c(90, 100, 110, 120, 130, 140, 190, 200, 210, 220),
option_price = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50)
)
# Perform the lead/lag join
stock_prices[, `:=`(
nearest_strike = strike_prices[.(symbol = symbol, stock_price), roll = "nearest", on = c("symbol", "strike")],
strike_above = shift(strike_prices[.(symbol = symbol, stock_price), roll = Inf, on = c("symbol", "strike")], type = "lead"),
strike_below = shift(strike_prices[.(symbol = symbol, stock_price), roll = -Inf, on = c("symbol", "strike")], type = "lag")
)]
stock_prices
strike_prices
stock_prices[strike_prices[.(symbol = symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]
stock_prices[strike_prices[.(symbol = symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]]
stock_prices[strike_prices[.(symbol = symbol, stock_price >= strike), roll = "nearest", on = c("symbol", "strike")]]
library(data.table)
# Create sample data
stock_prices <- data.table(
date = c("2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19",
"2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19"),
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
stock_price = c(100, 110, 120, 130, 140, 200, 210, 220, 230, 240)
)
strike_prices <- data.table(
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
strike = c(90, 100, 110, 120, 130, 140, 190, 200, 210, 220),
option_price = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50)
)
# Perform the lead/lag join
stock_prices[, `:=`(
nearest_strike = strike_prices[.(symbol = symbol, stock_price), roll = "nearest", on = .(symbol, strike)],
strike_above = shift(strike_prices[.(symbol = symbol, stock_price), roll = -Inf, on = .(symbol, strike)], type = "lead"),
strike_below = shift(strike_prices[.(symbol = symbol, stock_price), roll = Inf, on = .(symbol, strike)], type = "lag")
)]
dx_tkr_stk
library(data.table)
# Create sample data
stock_prices <- data.table(
date = c("2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19",
"2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19"),
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
stock_price = c(100, 110, 120, 130, 140, 200, 210, 220, 230, 240)
)
strike_prices <- data.table(
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
strike = c(90, 100, 110, 120, 130, 140, 190, 200, 210, 220),
option_price = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50)
)
# Perform the lead/lag join
stock_prices[, `:=`(
nearest_strike = strike_prices[.(symbol = symbol, stock_price), on = .(symbol, strike), roll = "nearest"],
strike_above = shift(strike_prices[.(symbol = symbol, stock_price), on = .(symbol, strike), roll = -Inf], type = "lead"),
strike_below = shift(strike_prices[.(symbol = symbol, stock_price), on = .(symbol, strike), roll = Inf], type = "lag")
)]
library(data.table)
# Create sample data
stock_prices <- data.table(
date = c("2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19",
"2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19", "2023-05-19"),
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
stock_price = c(100, 110, 120, 130, 140, 200, 210, 220, 230, 240)
)
strike_prices <- data.table(
symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "MSFT", "MSFT", "MSFT", "MSFT", "MSFT"),
strike_price = c(90, 100, 110, 120, 130, 140, 190, 200, 210, 220),
option_price = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50)
)
# Perform the lead/lag join
stock_prices[, `:=`(
nearest_strike = strike_prices[.(symbol = symbol, stock_price), on = .(symbol, strike_price), roll = "nearest"],
strike_above = shift(strike_prices[.(symbol = symbol, stock_price), on = .(symbol, strike_price), roll = Inf], type = "lead"),
strike_below = shift(strike_prices[.(symbol = symbol, stock_price), on = .(symbol, strike_price), roll = -Inf], type = "lag")
)]
dx_tkr_stk             <- dx_blob[
dt_date_exp_mth[
data.table::between(diff_today, 27,63),][1,1]
]
# ------------------------------------------------------------------------------
setkey(dx_tkr_stk,    TKR)
setkey(dx_ticker,     TKR)
# ------------------------------------------------------------------------------
dx_tkr_stk             <- data.table::setorder(dx_tkr_stk, "TKR", "`C/P`", "STRIKE")
s_minus_0              <- unique(dx_ticker[dx_tkr_stk, allow.cartesian=TRUE])[CMPRICE >= STRIKE, STRIKE[.N],     by = .(TKR)]
s_minus_0
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE >= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_1           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE >= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_0           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_1
dx_s_minus_0
dx_s_plus_0            <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_plus_1            <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE <= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_plus_0
dx_s_plus_1
dx_s_plus_0
dx_ticker[dx_tkr_stk, roll = "nearest",,on = .(CMPRICE = STRIKE)]
dx_ticker[dx_tkr_stk, roll = "nearest",,on = .(CMPRICE = STRIKE), nomatch = 0]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(1,11,9,12:13)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(1,11,8,12:13)]
dx_ticker[order(TKR)][dx_tkr_stk, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(1,11,8,12:13)]
dx_ticker[][dx_tkr_stk, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(1,11,8,12:13)]
dx_ticker[][dx_tkr_stk, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][,c(1,11,8,12:13)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(1,11,9,12:13)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][order(TKR)][,c(1:13)]
dx_tkr_stk
dx_tkr_stk[,1:11]
dx_tkr_stk[,1:12]
dx_tkr_stk[dx_ticker]
dx_tkr_stk[dx_ticker, roll = "nearest"]
dx_tkr_stk[dx_ticker, roll = "nearest", on = .(TKR)]
dx_tkr_stk[dx_ticker, roll = "nearest", on = .(STRIKE >= CMPRICE)]
dx_tkr_stk[dx_ticker, roll = "nearest", on = .(STRIKE >= CMPRICE), by = "TKR"]
dx_tkr_stk[dx_ticker,  by = "TKR"]
dx_tkr_stk[dx_ticker,  by = "TKR", roll = "nearest", on = .(STRIKE >= CMPRICE)]
dx_tkr_stk[dx_ticker,  by = "TKR", roll = "nearest", on = .(STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker,  by = "TKR", roll = "nearest", on = .(STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[dx_ticker,  by = "TKR"][, roll = "nearest", on = .(STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[dx_ticker, roll = "nearest", on = .(STRIKE = CMPRICE), by = "TKR"][order(TKR)]
dx_tkr_stk[order(TKR)][dx_ticker, roll = Inf, on = .(TKR, STRIKE > CMPRICE)]
dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[,c(1,11,9,12:13)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[,c(1,11,8,12:13)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[,c(1,11,8,12:13)]
dx_tkr_stk[,c(1,11,9,12:13)]
dx_tkr_stk[,c(1,11,10,12:13)]
dx_tkr_stk[,c(8,11,10,12:13)]
dx_tkr_stk[,c(10, 8,11:13)]
dx_tkr_stk[,c(10:11,8, 13)]
dx_tkr_stk[,c(10:11,8, 12:13)]
dx_tkr_stk[,c(10:11,8, 12:13)]dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)])
dx_tkr_stk[,c(10:11,8, 12:13)]dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)]
dx_tkr_stk[,c(10:11,8, 12:13)]dx_tkr_stk[dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[,c(10:11,8, 12:13)][dx_ticker, roll = Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[,c(10:11,8, 12:13)][dx_ticker, roll = Inf, on = .(TKR)]
dx_tkr_stk[,c(10:11,8, 12:13)][dx_ticker, roll = "nearest", on = .(TKR)]
dx_tkr_stk[,c(10:11,8, 12:13)][dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)]
dx_tkr_stk[dx_ticker, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)][,c(10:11,8, 12:13)]
na.omit(dx_tkr_stk[`C/P` == "C" & EXPDAY %like% '2022-12-16'][dx_ticker, roll = "nearest", ,on = .(TKR, STRIKE = CMPRICE)][order(TKR)])
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,"STRIKE"]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,"CMPRICE"]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,c("sTRIKE", "CMPRICE"]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,c("sTRIKE", "CMPRICE")]
dx_tkr_stk[dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,c("STRIKE", "CMPRICE")]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,c("STRIKE", "CMPRICE")]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,c("TKR", STRIKE", "CMPRICE")]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,c("STRIKE", "CMPRICE")]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,c("STRIKE", "CMPRICE", "TKR")]
dx_tkr_stk[order(TKR)][dx_ticker, roll = "nearest", ,on = .(STRIKE = CMPRICE)][,c("STRIKE", "CMPRICE", "TKR")][dx_ticker]
na.omit(as.data.table(shift(dx_tkr_stk[order(TKR)][dx_ticker, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 1)))
nearest_strike = strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")],
nearest_strike = strike_prices[.(symbol, stock_price), roll = "nearest", on = c("symbol", "strike")]
dx_tkr_stk[.(dx_ticker, CMPRICE), roll = "nearest", on = c("TKR", "STRIKE")],
dx_tkr_stk[.(dx_ticker, CMPRICE), roll = "nearest", on = c("TKR", "STRIKE")]
library(data.table)
# Sample data.table with option strike prices and stock prices
options <- data.table(symbol = c("AAPL", "AAPL", "AAPL", "AAPL", "AAPL", "GOOG", "GOOG", "GOOG", "GOOG", "GOOG"),
expiration_date = c("2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30"),
strike_price = c(100, 105, 110, 115, 120, 1500, 1520, 1540, 1560, 1580))
# Sample data.table with current stock prices
stock_prices <- data.table(symbol = c("AAPL", "GOOG"),
current_stock_price = c(116, 1550))
# Sort the options data.table by symbol, expiration_date, and strike_price
options <- options[order(symbol, expiration_date, strike_price)]
# Merge options data.table with stock_prices data.table
options_with_stock_price <- merge(options, stock_prices, by = "symbol")
library(data.table)
# Sample data.table with option strike prices and stock prices
options <- data.table(expiration_date = c("2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30"),
strike_price = c(100, 105, 110, 115, 120),
stock_price = c(112, 113, 115, 117, 119))
options <- data.table(expiration_date = c("2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30", "2023-05-30"),
strike_price = c(100, 105, 110, 115, 120),
stock_price = c(112, 113, 115, 117, 119))
# Sort the data.table by expiration_date and strike_price
options <- options[order(expiration_date, strike_price)]
# Define the current stock price and expiration date of interest
current_stock_price <- 116
expiration_of_interest <- "2023-05-30"
# Filter the options for the expiration date of interest
options_of_interest <- options[expiration_date == expiration_of_interest]
# Find the nearest strike price to the current stock price
nearest_strike_price <- options_of_interest[, .SD[which.min(abs(stock_price - current_stock_price))]]
nearest_strike_price
dx_s_minus_1           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE >= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_tkr_stk
dx_tkr_stk[C.P == 'P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C.P")]
dx_tkr_stk['C/P' == 'P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C.P")]
dx_tkr_stk['C/P' == 'P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
merge(dx_tkr_stk,dx_ticker, by = "TKR")
dx_condor <- merge(dx_tkr_stk,dx_ticker, by = "TKR")
dx_condor['C/P' == 'P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor[, .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor[[[2]] == 'P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor[[[2]] = 'P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor[[[2]] = 'P', ]
dx_condor[ [[2]] = 'P', ]
dx_condor[ [2] = 'P', ]
dx_condor[dx_condor[[2]]=='C',]
dx_condor[dx_condor[[2]]=='P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor[dx_condor[[2]]=='C', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor[dx_condor[[2]]=='P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_strike <- dx_condor[dx_condor[[2]]=='P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_index <- dx_condor[dx_condor[[2]]=='P', .I[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_index
dx_condor[shift(nearest_strike_index, -1):shift(nearest_strike_index, 1)]
dx_condor[shift(dx_condor_index_index, -1):shift(dx_condor_index, 1)]
dx_condor_index
dx_condor[shift(dx_condor_index, -2):shift(dx_condor_index, 2)]]
dx_condor[shift(dx_condor_index, -2):shift(dx_condor_index, 2)]
z<-dx_condor[shift(dx_condor_index, -2):shift(dx_condor_index, 2)]
z
dx_condor_index
dx_condor[dx_condor_index]
dx_condor[shift[dx_condor_index$V1,2]
dx_condor[shift(dx_condor_index$V1,2)]
dx_condor[shift(dx_condor_index$V1,3)]
dx_condor <- merge(dx_tkr_stk,dx_ticker, by = "TKR")
dx_condor
rm(dx_condor_index)
rm(dx_condor_strike)
dx_condor_strike <- dx_condor[dx_condor[[2]]=='P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_strike
dx_condor_index <- dx_condor[dx_condor[[2]]=='P', .I[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR, STRIKE), roll = Inf], type = "lead")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR, STRIKE), roll = Inf], type = "lead")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf], type = "lead")]
dx_condor
setkey(dx_condor, TKR)
setkey(dx_condor_strike, TKR)
setkey(dx_condor_index, TKR)
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf], type = "lead")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR, 'C/P'), roll = Inf], type = "lead")]
dx_condor_strike), roll = Inf], type = "lead")]
dx_condor_strike
dx_condor_index
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = -Inf], type = "lead")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf], type = "lead")]
dx_condor_strike[shift(dx_condor_index, -2[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf], type = "lead")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf, by = c("TKR", "C/P")], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE), on = .(TKR), roll = Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE, 'C/P'), on = .(TKR), roll = Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE, 'C/P'), on = .(TKR), roll = -Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE, 'C/P'), on = .(TKR), roll = "nearest"], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE, 'C/P'), on = .(TKR), roll = nearest], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE, 'C/P'), on = .(TKR), roll = inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE, 'C/P'), on = .(TKR), roll = -Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE), on = .(TKR), roll = Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE), on = .(TKR), roll = -Inf], type = "lag")]
dx_condor        <- merge(dx_tkr_stk, dx_ticker, by = "TKR")
dx_condor_strike <- dx_condor[dx_condor[[2]]=='P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_index  <- dx_condor[dx_condor[[2]]=='P', .I[ which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
nearest_strike_and_surrounding <- dx_condor[
.I %in% c(dx_condor_index-2, dx_condor_index, dx_condor_index+2)
]
dx_condor[shift(dx_condor_index, -2):shift(dx_condor_index, 2)]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE), on = .(TKR), roll = -Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE, 'C/P'), on = .(TKR), roll = -Inf], type = "lag")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, CMPRICE), on = .(TKR), roll = -Inf], type = "lead")]
dx_condor_strike[shift(dx_condor_index[.(TKR = TKR, STRIKE), on = .(TKR), roll = -Inf], type = "lag")]
source("C:/Users/falkg/OneDrive/Documents/GitHub/vl_archive/vl_archive.r", echo=TRUE)
dx_condor        <- merge(dx_tkr_stk, dx_ticker, by = "TKR")
dx_condor_strike <- dx_condor[dx_condor[[2]]=='P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_index  <- dx_condor[dx_condor[[2]]=='P', .I[ which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_strike
dx_condor_index
setkey(dx_condor_index, TKR, 'C/P')
setkey(dx_condor, TKR, 'C/P')
dx_condor[dx_condor_index]
dx_condor[13,]
dx_condor[order(TKR, 'C/P')][dx_condor_strike, roll = nearest, on = .(TKR, STRIKE = CMPRICE)]
dx_condor[order(TKR, 'C/P')][dx_condor_index, roll = nearest, on = .(TKR, STRIKE = CMPRICE)]
dx_condor[order(TKR, 'C/P')][dx_condor_index]
dx_condor[[dx_condor_index]
dx_condor[dx_condor_index]
dx_condor[dx_condor_strike]
dx_condor[dx_condor_strike, roll = "nearest", on = .(TKR, STRIKE = CMPRICE)]
dx_condor[dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)]
dx_condor[dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE), type = lag]
dx_condor[dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead"))
dx_condor[dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)], type = "lead"))
dx_condor[order(TKR)][dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 2))
dx_condor[order(TKR)][dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)], type = "lag", n = 2))
dx_condor[order(TKR)][dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)] type = "lag", n = 2))
shift(dx_condor[order(TKR)][dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1))
shift(dx_condor[order(TKR)][dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1)
as.data.table(shift(dx_condor[order(TKR)][dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1))
na.omit(as.data.table(shift(dx_condor[order(TKR)][dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1)))
na.omit(as.data.table(shift(dx_condor[order(TKR)][dx_condor_strike, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 1)))
na.omit(as.data.table(shift(dx_condor[order(TKR)][dx_condor_strike, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = -1)))
na.omit(as.data.table(shift(dx_condor[order(TKR)][dx_condor_strike, roll = -Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lag", n = 1)))
dx_condor_strike
na.omit(as.data.table(shift(dx_condor[order(TKR)][dx_condor_strike, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = -2)))
na.omit(as.data.table(shift(dx_condor[order(TKR)][dx_condor_strike, roll = Inf, on = .(TKR, STRIKE = CMPRICE)][order(TKR)], type = "lead", n = 2)))
dx_condor_strike
dx_condor_strike_p <- dx_condor[dx_condor[[2]]=='P', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_strike_c <- dx_condor[dx_condor[[2]]=='C', .SD[which.min(abs(STRIKE - CMPRICE))], by = c("TKR", "C/P")]
dx_condor_strike_c
dx_s_minus_0           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_0
dx_condor_strike_c
dx_condor_strike_p
dx_s_minus_1           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE >= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_minus_0           <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE >= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_plus_0            <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'P' & CMPRICE <= STRIKE, .SD[1], by = .(TKR)][,c(1,11,9,12:13)]
dx_s_plus_1            <<- dx_tkr_stk[dx_tkr_stk[[11]] == 'C' & CMPRICE <= STRIKE, .SD[2], by = .(TKR)][,c(1,11,9,12:13)]
glimpse(dx_s_minus_0)
glimpse(dx_s_minus_1)
glimpse(dx_s_plus_1)
glimpse(dx_s_plus_0)
rbind( dx_s_minus_1,  dx_s_minus_0)
dx_condor_stk <- rbind( dx_s_minus_1,  dx_s_minus_0,  dx_s_plus_0,  dx_s_plus_1)
dx_condor_stk
dx_condor_stk[, .N, by = TKR]
dx_condor_stk[, .N, by = TKR][N == 4]
dx_condor_stk <- rbind( dx_s_minus_1,  dx_s_minus_0,  dx_s_plus_0,  dx_s_plus_1)
dx_condor_stk[, .N, by = TKR][N == 4]
dx_condor <- rbind( dx_s_minus_1,  dx_s_minus_0,  dx_s_plus_0,  dx_s_plus_1)
dx_condor_stk[, .N, by = group][N == 1]$group
dx_condor
dx_condor_stk[, .N, by = TKR][N == 1]$group
dx_condor_stk[, .N, by = TKR][N == 1]$TKR
dx_condor_stk[, .N, by = TKR][N == 4]$TKR
dx_condor_stk[, .N, by = TKR][N == 4]
rm(dx_condor_stk)
dx_condor <- rbind( dx_s_minus_1,  dx_s_minus_0,  dx_s_plus_0,  dx_s_plus_1)
dx_condor_stk[, .N, by = TKR][N == 4]
dx_condor <- rbind( dx_s_minus_1,  dx_s_minus_0,  dx_s_plus_0,  dx_s_plus_1)
dx_condor[, .N, by = TKR][N == 4]
